# Projet EcoRide - Analyse et Plan de Développement

## 1. Analyse des Besoins

### Objectif
Développer une plateforme de covoiturage écologique permettant de réduire l'impact environnemental des déplacements en voiture.

### Utilisateurs Identifiés
- **Visiteur** : Personne non connectée pouvant consulter les covoiturages
- **Utilisateur** : Compte créé, peut être passager et/ou chauffeur
- **Employé** : Modère les avis et gère les litiges
- **Administrateur** : Gestion complète de la plateforme

## 2. Stack Technique Recommandée

### Front-end
- **HTML5** + **CSS3** (avec Bootstrap 5 pour le responsive)
- **JavaScript ES6+** pour l'interactivité
- **Chart.js** pour les graphiques administrateur

### Back-end
- **PHP 8.x** avec architecture MVC
- **PDO** pour l'accès aux données
- **Composer** pour la gestion des dépendances

### Bases de Données
- **MySQL/MariaDB** (relationnelle) pour les données structurées
- **MongoDB** (NoSQL) pour les préférences utilisateurs et logs

### Déploiement
- **GitHub** pour le versioning
- **Heroku** ou **Railway** pour l'hébergement

## 3. Architecture du Projet

```
ecoride/
├── public/
│   ├── index.php
│   ├── assets/
│   │   ├── css/
│   │   ├── js/
│   │   └── images/
├── src/
│   ├── Controllers/
│   ├── Models/
│   ├── Views/
│   ├── Config/
│   └── Utils/
├── sql/
│   ├── structure.sql
│   └── data.sql
├── docs/
├── composer.json
└── README.md
```

## 4. User Stories par Activité Type

### Activité Type 1 (Front-end) : US 1,2,3,4,5,6,7,11,12,13
- Interface utilisateur responsive
- Maquettage et intégration
- Interactions dynamiques JavaScript

### Activité Type 2 (Back-end) : US 3,5,6,7,8,9,10,11,12,13
- Gestion des données
- API REST
- Logique métier

## 5. Modèle de Données Proposé

### Tables Principales
- **users** : Gestion des comptes (visiteur → utilisateur → employé → admin)
- **vehicles** : Véhicules des chauffeurs
- **rides** : Covoiturages proposés
- **bookings** : Réservations
- **reviews** : Avis et notes
- **preferences** : Préférences chauffeurs (NoSQL)

### Système de Crédits
- 20 crédits offerts à l'inscription
- 2 crédits prélevés par la plateforme par trajet
- Mise à jour automatique des soldes

## 6. Fonctionnalités Clés à Implémenter

### Sécurité
- Hashage des mots de passe (password_hash())
- Validation et échappement des données
- Protection CSRF
- Sessions sécurisées

### Recherche et Filtres
- Recherche par ville + date
- Filtres : écologique, prix, durée, note
- Suggestions de dates alternatives

### Gestion des États
- Statuts des covoiturages (créé, en cours, terminé, annulé)
- Workflow de validation des avis
- Système de notifications email

## 7. Maquettage Requis

### Pages Desktop (3 maquettes)
1. **Accueil** : Barre de recherche, présentation
2. **Liste des covoiturages** : Résultats + filtres
3. **Espace utilisateur** : Dashboard personnel

### Pages Mobile (3 maquettes)
1. **Accueil mobile** : Version responsive
2. **Détail covoiturage** : Vue mobile optimisée
3. **Menu navigation** : Menu burger

## 8. Gestion de Projet

### Méthodologie Kanban
1. **Backlog** : Toutes les US par priorité
2. **To Do** : Sprint en cours
3. **In Progress** : Développement actuel
4. **Testing** : Tests sur branche dev
5. **Done** : Merge vers main

### Git Workflow
```
main (production)
├── develop (intégration)
│   ├── feature/US01-homepage
│   ├── feature/US02-navigation
│   └── feature/US03-search
```

## 9. Livrables Attendus

### Code
- [ ] Dépôt GitHub public avec branches structurées
- [ ] Application déployée fonctionnelle
- [ ] README.md avec instructions d'installation
- [ ] Scripts SQL de création/population BDD

### Documentation
- [ ] Manuel d'utilisation PDF avec identifiants test
- [ ] Charte graphique PDF (couleurs, polices, maquettes)
- [ ] Documentation technique (MCD, diagrammes)
- [ ] Documentation gestion de projet

### Sécurité et Bonnes Pratiques
- Validation côté client ET serveur
- Gestion d'erreurs appropriée
- Code commenté et structuré
- Tests unitaires recommandés

## 10. Planning Estimatif (70h)

- **Analyse & Maquettage** : 10h
- **Setup environnement** : 5h
- **Développement Front-end** : 25h
- **Développement Back-end** : 20h
- **Tests & Débogage** : 5h
- **Déploiement & Documentation** : 5h

## 11. Points d'Attention

### Écologie
- Mise en avant des véhicules électriques
- Charte graphique "verte"
- Calcul d'impact environnemental

### UX/UI
- Interface intuitive et moderne
- Responsive design obligatoire
- Accessibilité web

### Performance
- Optimisation des requêtes BDD
- Cache pour les recherches fréquentes
- Compression des assets